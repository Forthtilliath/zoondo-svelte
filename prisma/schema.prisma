generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String         @id @unique
  username   String         @unique
  email      String         @unique
  bio        String?
  // Relations
  Session    Session[]
  Key        Key[]
  Messages   Message[]
  CardsOwned CardInstance[]
  Actions    Action[]
  GamesAsP1  Game[]         @relation("Player1")
  GamesAsP2  Game[]         @relation("Player2")
}

model Session {
  id             String @id @unique
  active_expires BigInt
  idle_expires   BigInt
  // PK
  user_id        String
  // Relationships
  auth_user      User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  expires         BigInt?
  // FK
  user_id         String
  // Relationships
  auth_user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Game {
  game_id      String         @id @unique
  created_at   DateTime       @default(now())
  current_turn Int            @default(0)
  game_status  String         @default("Ongoing") // Waiting | Ongoing | Finished
  // FK
  player1_id   String
  player2_id   String
  // Relationships
  player1      User           @relation("Player1", fields: [player1_id], references: [id])
  player2      User           @relation("Player2", fields: [player2_id], references: [id])
  actions      Action[]
  cards        CardInstance[]
}

model Action {
  action_id       String       @id @unique
  created_at      DateTime     @default(now())
  destination     String // "hand" | "cemetery" | "x;y"
  // FK
  game_id         String
  player_id       String
  cardinstance_id String
  // Relationships
  game            Game         @relation(fields: [game_id], references: [game_id])
  player          User         @relation(fields: [player_id], references: [id])
  card_instance   CardInstance @relation(fields: [cardinstance_id], references: [cardinstance_id])
}

model Card {
  card_id   String         @id @unique
  name      String
  stats     String
  moves     String
  // Relationships
  instances CardInstance[]
}

model CardInstance {
  cardinstance_id String   @id @unique
  position        String // "hand" | "cemetery" | "x;y"
  // FK
  card_id         String
  game_id         String
  owner_id        String
  // Relationships
  card            Card     @relation(fields: [card_id], references: [card_id])
  game            Game     @relation(fields: [game_id], references: [game_id])
  owner           User     @relation(fields: [owner_id], references: [id])
  actions         Action[]
}

model Message {
  id         String   @id @unique
  room       String
  author_id  String
  content    String
  created_at DateTime @default(now())
  // Relationships
  author     User     @relation(fields: [author_id], references: [id], onDelete: Cascade)
}
